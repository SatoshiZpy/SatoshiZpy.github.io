<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[数组]]></title>
      <url>/2022/01/19/%E6%95%B0%E7%BB%84/</url>
      <content type="text"><![CDATA[数组经验总结双指针数组题目主要感觉除了暴力的遍历，双指针的使用可以大大降低时间复杂度，而且非常常用和便利。1. 移除元素27. 移除元素给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。不要使用额外的数组空间，你必须仅使用 $O(1)$ 额外空间并原地修改输入数组。元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。示例 1: 给定 nums = [3,2,2,3], val = 3, 函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。 你不需要考虑数组中超出新长度后面的元素。示例 2: 给定 nums = [0,1,2,2,3,0,4,2], val = 2, 函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。class Solution {    public int removeElement(int[] nums, int val) {        // 快慢指针        int fastIndex = 0;        int slowIndex;        for (slowIndex = 0; fastIndex &lt; nums.length; fastIndex++) {            if (nums[fastIndex] != val) {                nums[slowIndex] = nums[fastIndex];                slowIndex++;            }        }        return slowIndex;    }}2.滑动窗口（变体）977.有序数组的平方给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。示例 1： 输入：nums = [-4,-1,0,3,10] 输出：[0,1,9,16,100] 解释：平方后，数组变为 [16,1,0,9,100]，排序后，数组变为 [0,1,9,16,100]示例 2： 输入：nums = [-7,-3,2,3,11] 输出：[4,9,9,49,121]class Solution {    public int[] sortedSquares(int[] nums) {        int right = nums.length - 1;        int left = 0;        int[] result = new int[nums.length];        int index = result.length - 1;        while (left &lt;= right) {            if (nums[left] * nums[left] &gt; nums[right] * nums[right]) {                result[index--] = nums[left] * nums[left];                ++left;            } else {                result[index--] = nums[right] * nums[right];                --right;            }        }        return result;    }}]]></content>
      <categories>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Transformer]]></title>
      <url>/nlp/2020/07/01/Transformer/</url>
      <content type="text"><![CDATA[Self Attention]]></content>
      <categories>
        
          <category> Nlp </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
